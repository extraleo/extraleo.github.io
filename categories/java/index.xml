<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Ray&#39;s Blog</title>
    <link>https://leiheng.github.io/categories/java/</link>
    <description>Recent content in java on Ray&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 05 Nov 2019 14:23:36 +0800</lastBuildDate>
    
	<atom:link href="https://leiheng.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Play With Play 04</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-04/</link>
      <pubDate>Tue, 05 Nov 2019 14:23:36 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-04/</guid>
      <description>Coustom annotation add attrs to request. request = request.addAttr(TypedKey, value); NOTE: 这个request=request... 一定要加上, 不然你以为你加上去了,但其实并没有. 最后当你request.att</description>
    </item>
    
    <item>
      <title>Play With Play 03</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-03/</link>
      <pubDate>Mon, 04 Nov 2019 20:00:47 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-03/</guid>
      <description>Play UT practice 怎么写play 的UT, 尤其是写跟ebean 相关的 UT, 而且还有 component inject, 以及 component mock. ·End·</description>
    </item>
    
    <item>
      <title>Jackson Practice 01</title>
      <link>https://leiheng.github.io/posts/java/json/jackson-practice-01/</link>
      <pubDate>Wed, 30 Oct 2019 20:17:49 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/json/jackson-practice-01/</guid>
      <description>允许 lon 这个字段被反序列化, 但是不允许序列化. @Data @JsonIgnoreProperties(value = &amp;quot;lon&amp;quot;,allowSetters=true) public static class SimpleJson { private Long lon; private String str; } ·End·</description>
    </item>
    
    <item>
      <title>Circular Dependencies</title>
      <link>https://leiheng.github.io/posts/java/circular-dependencies/</link>
      <pubDate>Mon, 14 Oct 2019 16:49:51 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/circular-dependencies/</guid>
      <description>DI IOC Break it 
 ·End·</description>
    </item>
    
    <item>
      <title>Swagger Practice</title>
      <link>https://leiheng.github.io/posts/java/playframwork/swagger-practice/</link>
      <pubDate>Mon, 14 Oct 2019 16:04:45 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/swagger-practice/</guid>
      <description>let&amp;rsquo;s use swagger to generate api docs Using Swagger in Spring project is very very simple, just import dependency and use api annotaion, done! Then you can use {projectBaseContext}/swagger.json to get apidocs!
Now, how to use swagger on play2.7?
add dependency in sbt 
 ·End·</description>
    </item>
    
    <item>
      <title>UT Practice</title>
      <link>https://leiheng.github.io/posts/java/ut-practice/</link>
      <pubDate>Thu, 10 Oct 2019 15:35:00 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/ut-practice/</guid>
      <description>PowerMock vs Mockito 只有在mock static method 时候才使用 PowerMock, 其余时间都用Mockito Spring UT 说是Spring 的UT, 不如说成是 mockito 和 power mocker 的入坑笔记好了.😄 Playframwork UT play 的 ut 我专</description>
    </item>
    
    <item>
      <title>StackOverflow Error</title>
      <link>https://leiheng.github.io/posts/java/stackoverflow-error/</link>
      <pubDate>Thu, 12 Sep 2019 11:23:34 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/stackoverflow-error/</guid>
      <description>我还没想到我居然能够遇到StackOverflow 这种级别的错. 先来复习一下什么叫StackOverflow Error. ERROR - review StackOverflow Error StackOverflow object to json Fix 网上看到这</description>
    </item>
    
    <item>
      <title>Play With Play 02</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-02/</link>
      <pubDate>Mon, 09 Sep 2019 18:14:43 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-02/</guid>
      <description>Get request body 拿到body 并且转换成dto,而且我再吐槽一句, playframwork的官方guid上写的body 转 dto居然是自己写个annota</description>
    </item>
    
    <item>
      <title>Maven Dependencies Pom Type</title>
      <link>https://leiheng.github.io/posts/java/maven-dependencies/</link>
      <pubDate>Tue, 13 Aug 2019 17:16:54 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/maven-dependencies/</guid>
      <description>终于有一天, 我看到我自己 java 练习项目依赖, 配置乱成一坨糟, 心里很糟心, 就打算整理整理整理. 于是创建了 common-dependency-parent, 项目结构如下: . |-- common-dep | `-- pom.xml |-- pom.xml `-- shared-pom `-- pom.xml 其</description>
    </item>
    
    <item>
      <title>Play With Play 01</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-01/</link>
      <pubDate>Thu, 08 Aug 2019 13:16:32 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-01/</guid>
      <description>prepare install gradle install sbt gradle 我尝试去使用 gradle 去构建项目, 但是一时半会还没能理解 gradle 里面 plugins 怎么玩的, 遂放弃, 先把 play 玩起来再说. sbt I&amp;rsquo;m new one for playframwork. My intellij cannot import sbt project so that tried to run sbt</description>
    </item>
    
    <item>
      <title>Jvm Infra</title>
      <link>https://leiheng.github.io/posts/java/jvm/jvm-infra/</link>
      <pubDate>Mon, 05 Aug 2019 18:27:25 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/jvm/jvm-infra/</guid>
      <description>infra java 虚拟机分heap、vm stack(虚拟机栈)、method area、 native method stack(本地方法栈)、program counter register(程序</description>
    </item>
    
    <item>
      <title>Java Writing Specification.md</title>
      <link>https://leiheng.github.io/posts/java/java-tips/</link>
      <pubDate>Thu, 01 Aug 2019 19:25:47 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/java-tips/</guid>
      <description>到 resource 文件夹里面拿文件 String response = Resources.toString(Resources.getResource(&amp;quot;response.json&amp;quot;), Charsets.UTF_8); // bytes: Resources.asByteSource(Resources.getResource(&amp;quot;datain_100000.log&amp;quot;).toURI().toURL()).openBufferedStream(); // Guava: public static URL getResource(String resourceName) { ClassLoader loader = MoreObjects.firstNonNull( Thread.currentThread().getContextClassLoader(), Resources.class.getClassLoader()); URL url = loader.getResource(resourceName); checkArgument(url != null, &amp;quot;resource %s not found.&amp;quot;, resourceName); return url; } get env in SpringBoot // define properties in application.yaml like: project: service: name: smarta-installer feature: mgmt: job-setting: job-retry-time: ${JOB_RETRY_TIME:100} job-interval-time: ${JOB_INTERVAL_TIME:60} then, create</description>
    </item>
    
  </channel>
</rss>