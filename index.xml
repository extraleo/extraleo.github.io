<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ray&#39;s Blog on Ray&#39;s Blog</title>
    <link>https://leiheng.github.io/</link>
    <description>Recent content in Ray&#39;s Blog on Ray&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 02 Dec 2019 15:12:25 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spi Java</title>
      <link>https://leiheng.github.io/posts/java/spi-java/</link>
      <pubDate>Mon, 02 Dec 2019 15:12:25 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/spi-java/</guid>
      <description>&lt;p&gt;最近, 我在load 一个包的时候, 要改改这个包里面的东西, 拉了源码一看, 好吧, spi.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sbt Compiler</title>
      <link>https://leiheng.github.io/posts/java/playframwork/sbt-compiler/</link>
      <pubDate>Sat, 30 Nov 2019 13:02:43 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/sbt-compiler/</guid>
      <description>

&lt;p&gt;为啥子sbt编译的时候老是报我routes 有问题&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;fixme&#34;&gt;fixme&lt;/h2&gt;

&lt;p&gt;格老子的, 我现在在 intellij 那个 sbt shell, 里跑了一遍, 就编译过了, 这难道是我在 intellij 里 import sbt 导致的后果?????&lt;/p&gt;

&lt;p&gt;算逑, 以后再遇到, 就在 intellij 里面跑一下&amp;hellip;&amp;hellip;然后再在 bash run 好了&amp;hellip;&amp;hellip;&lt;/p&gt;

&lt;p&gt;但是, 在intellij 里面的sbt shell 跑的时候, &lt;strong&gt;务必&lt;/strong&gt;把外面的那个sbt console 关掉.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Maven Shade Plugin Merge Jar</title>
      <link>https://leiheng.github.io/posts/java/maven-shade-plugin-merge-jar/</link>
      <pubDate>Thu, 28 Nov 2019 19:59:49 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/maven-shade-plugin-merge-jar/</guid>
      <description>

&lt;p&gt;太悲伤了, 接手了一个非常挫里挫气的项目, 改了很多挫里挫气的代码, 最气的是, 这个代码的打包方式是从intellij/eclipse 导出的. 谁敢相信, 在2019年了, 连maven/gradle 项目都不是的 java 项目呢&amp;hellip;..&lt;/p&gt;

&lt;p&gt;由于引入了两个第三方类库, 导致我们打的包出来基本上不能跑&amp;hellip; &lt;strong&gt;Class not found&lt;/strong&gt; 胡你一脸. 行吧, merge jar.&lt;/p&gt;

&lt;h2 id=&#34;merge-jar&#34;&gt;Merge Jar&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;要把这个不是maven 项目改成maven 项目, 指定 sourceDir: &lt;code&gt;&amp;lt;sourceDirectory&amp;gt;src&amp;lt;/sourceDirectory&amp;gt;&lt;/code&gt;, 然后用上 &lt;code&gt;maven-compiler-plugin&lt;/code&gt; 确定 java 版本号.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;引入 &lt;strong&gt;本地dependencies&lt;/strong&gt;. 这个包没得groupid,没得artifactId, 没得version 的三无包 🖕 . 所以要手动指定这个包在哪, 不然编译不过&amp;hellip; 💅 , 并且随意填填以上三项:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;
  &amp;lt;groupId&amp;gt;whatever&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;whatever&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;
  &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;
  &amp;lt;systemPath&amp;gt;${project.basedir}/lib/whatever.zip&amp;lt;/systemPath&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意了, &lt;code&gt;&amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;&lt;/code&gt; 一定要有, 天知道我随意删了什么神奇的scope&amp;hellip;&amp;hellip;.. 导致了我浪费了15min&amp;hellip;&amp;hellip;..&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;set shade plugin, 非常随意, 但是有个坑. 因为我们这次是merge, 所以要把所有的东西都给搞进来, 在 include 就填 &lt;strong&gt;*&lt;/strong&gt;, 然后果然什么都没有 merge 进来&amp;hellip; 💅
再看看, 居然是 &lt;strong&gt;两个*&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;最后, pom:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;  &amp;lt;dependencies&amp;gt;
    &amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;Whatever&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;Whatever&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;
      &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;
      &amp;lt;systemPath&amp;gt;${project.basedir}/lib/Whatever.zip&amp;lt;/systemPath&amp;gt;
    &amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
  &amp;lt;build&amp;gt;
    &amp;lt;sourceDirectory&amp;gt;src&amp;lt;/sourceDirectory&amp;gt;
    &amp;lt;plugins&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
        &amp;lt;configuration&amp;gt;
          &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
          &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
        &amp;lt;/configuration&amp;gt;
      &amp;lt;/plugin&amp;gt;
      &amp;lt;plugin&amp;gt;
        &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;2.4.3&amp;lt;/version&amp;gt;
        &amp;lt;executions&amp;gt;
          &amp;lt;execution&amp;gt;
            &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
            &amp;lt;goals&amp;gt;
              &amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
            &amp;lt;configuration&amp;gt;
              &amp;lt;filters&amp;gt;
                &amp;lt;filter&amp;gt;
                  &amp;lt;artifact&amp;gt;*:*&amp;lt;/artifact&amp;gt;
                  &amp;lt;includes&amp;gt;
                    &amp;lt;include&amp;gt;**&amp;lt;/include&amp;gt;
                  &amp;lt;/includes&amp;gt;
                &amp;lt;/filter&amp;gt;
              &amp;lt;/filters&amp;gt;
            &amp;lt;/configuration&amp;gt;
          &amp;lt;/execution&amp;gt;
        &amp;lt;/executions&amp;gt;
      &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
  &amp;lt;/build&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Make Pipe Work in Java</title>
      <link>https://leiheng.github.io/posts/java/make-pipe-work-in-java/</link>
      <pubDate>Wed, 27 Nov 2019 16:09:40 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/make-pipe-work-in-java/</guid>
      <description>&lt;p&gt;坑爹啊, 我写了个用 &lt;code&gt;pipe&lt;/code&gt; 的&lt;code&gt;linux command&lt;/code&gt;, 用了 &lt;code&gt;Runtime.exec(String cmd)&lt;/code&gt;, 似乎没有什么作用. 非常的困惑, 明明这个命令能够在linux 上跑的. 我还怀疑是不是最后的返回的问题(因为我这条命令最后的确会报个 &lt;em&gt;kill 不存在的pid&lt;/em&gt; 的错误).还用了个:
&lt;code&gt;&amp;gt; /dev/null &amp;gt; 2&amp;amp;1&lt;/code&gt;, 但是并没有起作用.&lt;/p&gt;

&lt;p&gt;伟大的&lt;strong&gt;StackOverflow&lt;/strong&gt;, 给出了&lt;a href=&#34;https://stackoverflow.com/questions/5928225/how-to-make-pipes-work-with-runtime-exec&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;回答&lt;/a&gt;
用 &lt;code&gt;String []&lt;/code&gt;, 我之前阅读过这段代码, 知道 &lt;code&gt;String&lt;/code&gt; 最后会被拆成 &lt;code&gt;String []&lt;/code&gt;, 但是没想到啊, 要在前面加 &lt;code&gt;sh -c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;最后 用了 &lt;code&gt;sh -c&lt;/code&gt; 和 &lt;code&gt;String[]&lt;/code&gt; 来构建命令.&lt;/p&gt;

&lt;p&gt;DONE.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Http Not Supported or Disabled in Libcurl</title>
      <link>https://leiheng.github.io/posts/misc/http-not-supported-or-disabled-in-libcurl/</link>
      <pubDate>Tue, 12 Nov 2019 19:20:28 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/misc/http-not-supported-or-disabled-in-libcurl/</guid>
      <description>&lt;p&gt;如题. 一个这样的问题. 我在网上搜的时候发现排名第一的StackOverflow的回答说是 windows 不支持单引号 ==_==&amp;hellip;..&lt;/p&gt;

&lt;p&gt;想到之前自己做过的一个实验, 在win上用同一个东西加密, 单引括起来的加密的结果就是和双引号/不加引号的结果不一样, 没想到今天居然还搜到了最终回答&amp;hellip;.. &lt;strong&gt;win这个狗逼不支持单引号&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;但是我的环境是在linux 上出现的这个问题. 这个最终答案也很蠢&amp;hellip;.
就是http 和 双引号之间有个 &lt;strong&gt;空格&lt;/strong&gt;&amp;hellip;.&lt;/p&gt;

&lt;p&gt;Like:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;leih:/opt/dah # curl --noproxy localhost &amp;quot;http://localhost:9060/Action=Encrypted&amp;quot;
{&amp;quot;autnresponse&amp;quot;:{&amp;quot;action&amp;quot;:{&amp;quot;$&amp;quot;:&amp;quot;QUERY&amp;quot;},&amp;quot;response&amp;quot;:{&amp;quot;$&amp;quot;:&amp;quot;SUCCESS&amp;quot;}}}
leih:/opt/dah #
leih:/opt/dah # curl --noproxy localhost &amp;quot; http://localhost:9060/Action=Encrypted&amp;quot;
curl: (1) Protocol &amp;quot; http&amp;quot; not supported or disabled in libcurl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OR 用了错误的引号: &lt;a href=&#34;https://stackoverflow.com/questions/6884669/curl-1-protocol-https-not-supported-or-disabled-in-libcurl&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://stackoverflow.com/questions/6884669/curl-1-protocol-https-not-supported-or-disabled-in-libcurl&lt;/a&gt;, 那个第三个回答.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;看来会有很多格式错误会导致这个问题呢. curl&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Play With Play 05</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-05/</link>
      <pubDate>Mon, 11 Nov 2019 14:49:28 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-05/</guid>
      <description>

&lt;h2 id=&#34;protobuf-serialization&#34;&gt;protobuf serialization&lt;/h2&gt;

&lt;p&gt;protobuf 序列化不难, 他有自己默认的序列化和反序列化. 并且是支持驼峰的命名模式的. 但是关键的是, 我们框架的里面用的jackson 的序列化工具. 怎么把他们集成到一块呢????&lt;/p&gt;

&lt;h3 id=&#34;custom-jackson-simplemodel&#34;&gt;custom Jackson simpleModel&lt;/h3&gt;

&lt;h2 id=&#34;json-provide-module-load-order&#34;&gt;Json Provide module load order&lt;/h2&gt;

&lt;p&gt;TODO:
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Play With Play 04</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-04/</link>
      <pubDate>Tue, 05 Nov 2019 14:23:36 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-04/</guid>
      <description>

&lt;h2 id=&#34;custom-annotation&#34;&gt;Custom annotation&lt;/h2&gt;

&lt;h3 id=&#34;add-attrs-to-request&#34;&gt;add attrs to request.&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;request = request.addAttr(TypedKey, value);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;   这个&lt;code&gt;request=request...&lt;/code&gt; 一定要加上, 不然你以为你加上去了,但其实并没有.&lt;/p&gt;

&lt;p&gt;最后当你&lt;code&gt;request.attrs().getOptional()&lt;/code&gt;的时候就会非常的悲剧, 并且还不知道为什么会拿不到东西&amp;hellip;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Play With Play 03</title>
      <link>https://leiheng.github.io/posts/java/playframwork/play-with-play-03/</link>
      <pubDate>Mon, 04 Nov 2019 20:00:47 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/play-with-play-03/</guid>
      <description>

&lt;h2 id=&#34;play-ut-practice&#34;&gt;Play UT practice&lt;/h2&gt;

&lt;p&gt;怎么写play 的UT, 尤其是写跟ebean 相关的 UT, 而且还有 component inject, 以及 component mock.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jackson Practice 01</title>
      <link>https://leiheng.github.io/posts/java/json/jackson-practice-01/</link>
      <pubDate>Wed, 30 Oct 2019 20:17:49 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/json/jackson-practice-01/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;允许 lon 这个字段被反序列化, 但是不允许序列化.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Data
@JsonIgnoreProperties(value = &amp;quot;lon&amp;quot;,allowSetters=true)
public static class SimpleJson {
private Long lon;
private String str;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Circular Dependencies</title>
      <link>https://leiheng.github.io/posts/java/circular-dependencies/</link>
      <pubDate>Mon, 14 Oct 2019 16:49:51 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/circular-dependencies/</guid>
      <description>

&lt;h2 id=&#34;di&#34;&gt;DI&lt;/h2&gt;

&lt;h3 id=&#34;ioc&#34;&gt;IOC&lt;/h3&gt;

&lt;h2 id=&#34;break-it&#34;&gt;Break it&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Swagger Practice</title>
      <link>https://leiheng.github.io/posts/java/playframwork/swagger-practice/</link>
      <pubDate>Mon, 14 Oct 2019 16:04:45 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/playframwork/swagger-practice/</guid>
      <description>

&lt;h2 id=&#34;let-s-use-swagger-to-generate-api-docs&#34;&gt;let&amp;rsquo;s use swagger to generate api docs&lt;/h2&gt;

&lt;p&gt;Using Swagger in Spring project is very very simple, just import dependency and use api annotaion, done! Then you can use &lt;code&gt;{projectBaseContext}/swagger.json&lt;/code&gt; to get apidocs!&lt;/p&gt;

&lt;p&gt;Now, how to use swagger on play2.7?&lt;/p&gt;

&lt;h3 id=&#34;add-dependency-in-sbt&#34;&gt;add dependency in sbt&lt;/h3&gt;

&lt;p&gt;// todo&lt;/p&gt;

&lt;h3 id=&#34;ignore-ebean-interator&#34;&gt;ignore &lt;code&gt;_ebean_interator&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UT Practice</title>
      <link>https://leiheng.github.io/posts/java/ut-practice/</link>
      <pubDate>Thu, 10 Oct 2019 15:35:00 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/java/ut-practice/</guid>
      <description>

&lt;p&gt;PowerMock vs Mockito&lt;/p&gt;

&lt;p&gt;只有在mock static method 时候才使用 PowerMock, 其余时间都用Mockito&lt;/p&gt;

&lt;h1 id=&#34;spring-ut&#34;&gt;Spring UT&lt;/h1&gt;

&lt;p&gt;说是Spring 的UT, 不如说成是 mockito 和 power mocker 的入坑笔记好了.😄&lt;/p&gt;

&lt;h1 id=&#34;playframwork-ut&#34;&gt;Playframwork UT&lt;/h1&gt;

&lt;p&gt;play 的 ut 我专门写了一篇笔记来记录&amp;hellip;.&lt;/p&gt;

&lt;h1 id=&#34;js-ut-jsunit&#34;&gt;js UT &amp;ndash; jsunit&lt;/h1&gt;

&lt;p&gt;[Go to UT for playframwork.]()&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows Misc</title>
      <link>https://leiheng.github.io/posts/misc/windows-misc/</link>
      <pubDate>Thu, 10 Oct 2019 15:34:24 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/misc/windows-misc/</guid>
      <description>

&lt;h2 id=&#34;nfs-on-windows&#34;&gt;NFS on windows&lt;/h2&gt;

&lt;p&gt;老是跑到一台机器上去看东西,受不了了, 于是在我本机开了个nfs client. 过程还好, 就是后来我一不小心改了一个东西, 重启之后我磁盘锁死了&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;win-不支持单引号&#34;&gt;win 不支持单引号&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bash Writing Specification</title>
      <link>https://leiheng.github.io/posts/linux/bash-writing-specification/</link>
      <pubDate>Tue, 24 Sep 2019 17:32:00 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/linux/bash-writing-specification/</guid>
      <description>&lt;p&gt;Bash 写作的一些规范&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>做工程的一些道理</title>
      <link>https://leiheng.github.io/posts/misc/about-project/</link>
      <pubDate>Mon, 16 Sep 2019 14:00:48 +0800</pubDate>
      
      <guid>https://leiheng.github.io/posts/misc/about-project/</guid>
      <description>

&lt;h2 id=&#34;数据模型的构建&#34;&gt;数据模型的构建&lt;/h2&gt;

&lt;p&gt;数据模型非常重要, 一旦数据模型设计不咋, 之后重构就是一团糟&lt;/p&gt;

&lt;h2 id=&#34;论需求和解决方法&#34;&gt;论需求和解决方法&lt;/h2&gt;

&lt;p&gt;PM 提需求就提需求, 解决方案都是rd的事情.&lt;/p&gt;

&lt;h2 id=&#34;论代码分层&#34;&gt;论代码分层&lt;/h2&gt;

&lt;p&gt;Controller 和 service 以及中台 service 分层.
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;  ·End·  &lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>